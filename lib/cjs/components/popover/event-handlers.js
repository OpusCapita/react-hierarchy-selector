'use strict';

exports.__esModule = true;
exports.default = undefined;

var _constants = require('./constants');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function getFocusableFoundElements(target) {
  return Array.prototype.slice.call(target.getElementsByClassName(_constants.CLASS_NAME_SEARCH_FOCUSABLE));
}

function calculateNewIndex(key, index, listLength) {
  var i = index;
  switch (key) {
    case _constants.KEYS.UP:
      i -= 1;
      break;
    case _constants.KEYS.DOWN:
      i += 1;
      break;
    default:
  }

  return function (ind, min, max) {
    if (ind < min) return max;
    if (ind > max) return min;

    return ind;
  }(i, 0, listLength - 1);
}

var EventHandler = function () {
  function EventHandler() {
    _classCallCheck(this, EventHandler);
  }

  EventHandler.searchElementFocusHanlder = function searchElementFocusHanlder(event) {
    var key = event.keyCode;

    if (!key || key !== _constants.KEYS.UP && key !== _constants.KEYS.DOWN) return;

    var allFoundItems = getFocusableFoundElements(event.currentTarget);

    if (allFoundItems.length === 0) return;

    var _document = document,
        activeElement = _document.activeElement;

    var index = allFoundItems.findIndex(function (i) {
      return i === activeElement;
    });
    index = calculateNewIndex(key, index, allFoundItems.length);

    allFoundItems[index].focus();
  };

  return EventHandler;
}();

exports.default = EventHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3BvcG92ZXIvZXZlbnQtaGFuZGxlcnMuanMiXSwibmFtZXMiOlsiZ2V0Rm9jdXNhYmxlRm91bmRFbGVtZW50cyIsInRhcmdldCIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImNhbGN1bGF0ZU5ld0luZGV4Iiwia2V5IiwiaW5kZXgiLCJsaXN0TGVuZ3RoIiwiaSIsIlVQIiwiRE9XTiIsImluZCIsIm1pbiIsIm1heCIsIkV2ZW50SGFuZGxlciIsInNlYXJjaEVsZW1lbnRGb2N1c0hhbmxkZXIiLCJldmVudCIsImtleUNvZGUiLCJhbGxGb3VuZEl0ZW1zIiwiY3VycmVudFRhcmdldCIsImxlbmd0aCIsImRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsImZpbmRJbmRleCIsImZvY3VzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7O0FBRUEsU0FBU0EseUJBQVQsQ0FBbUNDLE1BQW5DLEVBQTJDO0FBQ3pDLFNBQU9DLE1BQU1DLFNBQU4sQ0FDSkMsS0FESSxDQUVKQyxJQUZJLENBRUNKLE9BQU9LLHNCQUFQLHdDQUZELENBQVA7QUFHRDs7QUFFRCxTQUFTQyxpQkFBVCxDQUEyQkMsR0FBM0IsRUFBZ0NDLEtBQWhDLEVBQXVDQyxVQUF2QyxFQUFtRDtBQUNqRCxNQUFJQyxJQUFJRixLQUFSO0FBQ0EsVUFBUUQsR0FBUjtBQUNFLFNBQUssZ0JBQUtJLEVBQVY7QUFDRUQsV0FBSyxDQUFMO0FBQ0E7QUFDRixTQUFLLGdCQUFLRSxJQUFWO0FBQ0VGLFdBQUssQ0FBTDtBQUNBO0FBQ0Y7QUFQRjs7QUFVQSxTQUFRLFVBQUNHLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxHQUFYLEVBQW1CO0FBQ3pCLFFBQUlGLE1BQU1DLEdBQVYsRUFBZSxPQUFPQyxHQUFQO0FBQ2YsUUFBSUYsTUFBTUUsR0FBVixFQUFlLE9BQU9ELEdBQVA7O0FBRWYsV0FBT0QsR0FBUDtBQUNELEdBTE0sQ0FLSkgsQ0FMSSxFQUtELENBTEMsRUFLRUQsYUFBYSxDQUxmLENBQVA7QUFNRDs7SUFFb0JPLFk7Ozs7O2VBQ1pDLHlCLHNDQUEwQkMsSyxFQUFPO0FBQ3RDLFFBQU1YLE1BQU1XLE1BQU1DLE9BQWxCOztBQUVBLFFBQUksQ0FBQ1osR0FBRCxJQUFTQSxRQUFRLGdCQUFLSSxFQUFiLElBQW1CSixRQUFRLGdCQUFLSyxJQUE3QyxFQUFvRDs7QUFFcEQsUUFBTVEsZ0JBQWdCckIsMEJBQTBCbUIsTUFBTUcsYUFBaEMsQ0FBdEI7O0FBRUEsUUFBSUQsY0FBY0UsTUFBZCxLQUF5QixDQUE3QixFQUFnQzs7QUFQTSxvQkFTWkMsUUFUWTtBQUFBLFFBUzlCQyxhQVQ4QixhQVM5QkEsYUFUOEI7O0FBVXRDLFFBQUloQixRQUFRWSxjQUFjSyxTQUFkLENBQXdCO0FBQUEsYUFBS2YsTUFBTWMsYUFBWDtBQUFBLEtBQXhCLENBQVo7QUFDQWhCLFlBQVFGLGtCQUFrQkMsR0FBbEIsRUFBdUJDLEtBQXZCLEVBQThCWSxjQUFjRSxNQUE1QyxDQUFSOztBQUVBRixrQkFBY1osS0FBZCxFQUFxQmtCLEtBQXJCO0FBQ0QsRzs7Ozs7a0JBZmtCVixZIiwiZmlsZSI6ImV2ZW50LWhhbmRsZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS0VZUywgQ0xBU1NfTkFNRV9TRUFSQ0hfRk9DVVNBQkxFIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5mdW5jdGlvbiBnZXRGb2N1c2FibGVGb3VuZEVsZW1lbnRzKHRhcmdldCkge1xuICByZXR1cm4gQXJyYXkucHJvdG90eXBlXG4gICAgLnNsaWNlXG4gICAgLmNhbGwodGFyZ2V0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoQ0xBU1NfTkFNRV9TRUFSQ0hfRk9DVVNBQkxFKSk7XG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZU5ld0luZGV4KGtleSwgaW5kZXgsIGxpc3RMZW5ndGgpIHtcbiAgbGV0IGkgPSBpbmRleDtcbiAgc3dpdGNoIChrZXkpIHtcbiAgICBjYXNlIEtFWVMuVVA6XG4gICAgICBpIC09IDE7XG4gICAgICBicmVhaztcbiAgICBjYXNlIEtFWVMuRE9XTjpcbiAgICAgIGkgKz0gMTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gIH1cblxuICByZXR1cm4gKChpbmQsIG1pbiwgbWF4KSA9PiB7XG4gICAgaWYgKGluZCA8IG1pbikgcmV0dXJuIG1heDtcbiAgICBpZiAoaW5kID4gbWF4KSByZXR1cm4gbWluO1xuXG4gICAgcmV0dXJuIGluZDtcbiAgfSkoaSwgMCwgbGlzdExlbmd0aCAtIDEpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudEhhbmRsZXIge1xuICBzdGF0aWMgc2VhcmNoRWxlbWVudEZvY3VzSGFubGRlcihldmVudCkge1xuICAgIGNvbnN0IGtleSA9IGV2ZW50LmtleUNvZGU7XG5cbiAgICBpZiAoIWtleSB8fCAoa2V5ICE9PSBLRVlTLlVQICYmIGtleSAhPT0gS0VZUy5ET1dOKSkgcmV0dXJuO1xuXG4gICAgY29uc3QgYWxsRm91bmRJdGVtcyA9IGdldEZvY3VzYWJsZUZvdW5kRWxlbWVudHMoZXZlbnQuY3VycmVudFRhcmdldCk7XG5cbiAgICBpZiAoYWxsRm91bmRJdGVtcy5sZW5ndGggPT09IDApIHJldHVybjtcblxuICAgIGNvbnN0IHsgYWN0aXZlRWxlbWVudCB9ID0gZG9jdW1lbnQ7XG4gICAgbGV0IGluZGV4ID0gYWxsRm91bmRJdGVtcy5maW5kSW5kZXgoaSA9PiBpID09PSBhY3RpdmVFbGVtZW50KTtcbiAgICBpbmRleCA9IGNhbGN1bGF0ZU5ld0luZGV4KGtleSwgaW5kZXgsIGFsbEZvdW5kSXRlbXMubGVuZ3RoKTtcblxuICAgIGFsbEZvdW5kSXRlbXNbaW5kZXhdLmZvY3VzKCk7XG4gIH1cbn1cbiJdfQ==
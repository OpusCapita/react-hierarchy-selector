'use strict';

exports.__esModule = true;
exports.default = undefined;

var _constants = require('./constants');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function getFocusableFoundElements(target) {
  return Array.prototype.slice.call(target.getElementsByClassName(_constants.CLASS_NAME_SEARCH_FOCUSABLE));
}

function calculateNewIndex(key, index, listLength) {
  var i = index;
  switch (key) {
    case _constants.KEYS.UP:
      i -= 1;
      break;
    case _constants.KEYS.DOWN:
      i += 1;
      break;
    default:
  }

  return function (ind, min, max) {
    if (ind < min) return max;
    if (ind > max) return min;

    return ind;
  }(i, 0, listLength - 1);
}

var EventHandler = function () {
  function EventHandler() {
    _classCallCheck(this, EventHandler);
  }

  EventHandler.searchElementFocusHanlder = function searchElementFocusHanlder(event) {
    var key = event.keyCode;

    if (!key || key !== _constants.KEYS.UP && key !== _constants.KEYS.DOWN) return;

    var allFoundItems = getFocusableFoundElements(event.currentTarget);

    if (allFoundItems.length === 0) return;

    var _document = document,
        activeElement = _document.activeElement;

    var index = allFoundItems.findIndex(function (i) {
      return i === activeElement;
    });
    index = calculateNewIndex(key, index, allFoundItems.length);

    allFoundItems[index].focus();
  };

  return EventHandler;
}();

exports.default = EventHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3BvcG92ZXIvZXZlbnQtaGFuZGxlcnMuanMiXSwibmFtZXMiOlsiZ2V0Rm9jdXNhYmxlRm91bmRFbGVtZW50cyIsInRhcmdldCIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsIkNMQVNTX05BTUVfU0VBUkNIX0ZPQ1VTQUJMRSIsImNhbGN1bGF0ZU5ld0luZGV4Iiwia2V5IiwiaW5kZXgiLCJsaXN0TGVuZ3RoIiwiaSIsIktFWVMiLCJVUCIsIkRPV04iLCJpbmQiLCJtaW4iLCJtYXgiLCJFdmVudEhhbmRsZXIiLCJzZWFyY2hFbGVtZW50Rm9jdXNIYW5sZGVyIiwiZXZlbnQiLCJrZXlDb2RlIiwiYWxsRm91bmRJdGVtcyIsImN1cnJlbnRUYXJnZXQiLCJsZW5ndGgiLCJkb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJmaW5kSW5kZXgiLCJmb2N1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztBQUVBLFNBQVNBLHlCQUFULENBQW1DQyxNQUFuQyxFQUEyQztBQUN6QyxTQUFPQyxNQUFNQyxTQUFOLENBQ0pDLEtBREksQ0FFSkMsSUFGSSxDQUVDSixPQUFPSyxzQkFBUCxDQUE4QkMsc0NBQTlCLENBRkQsQ0FBUDtBQUdEOztBQUVELFNBQVNDLGlCQUFULENBQTJCQyxHQUEzQixFQUFnQ0MsS0FBaEMsRUFBdUNDLFVBQXZDLEVBQW1EO0FBQ2pELE1BQUlDLElBQUlGLEtBQVI7QUFDQSxVQUFRRCxHQUFSO0FBQ0UsU0FBS0ksZ0JBQUtDLEVBQVY7QUFDRUYsV0FBSyxDQUFMO0FBQ0E7QUFDRixTQUFLQyxnQkFBS0UsSUFBVjtBQUNFSCxXQUFLLENBQUw7QUFDQTtBQUNGO0FBUEY7O0FBVUEsU0FBUSxVQUFDSSxHQUFELEVBQU1DLEdBQU4sRUFBV0MsR0FBWCxFQUFtQjtBQUN6QixRQUFJRixNQUFNQyxHQUFWLEVBQWUsT0FBT0MsR0FBUDtBQUNmLFFBQUlGLE1BQU1FLEdBQVYsRUFBZSxPQUFPRCxHQUFQOztBQUVmLFdBQU9ELEdBQVA7QUFDRCxHQUxNLENBS0pKLENBTEksRUFLRCxDQUxDLEVBS0VELGFBQWEsQ0FMZixDQUFQO0FBTUQ7O0lBRW9CUSxZOzs7OztlQUNaQyx5QixzQ0FBMEJDLEssRUFBTztBQUN0QyxRQUFNWixNQUFNWSxNQUFNQyxPQUFsQjs7QUFFQSxRQUFJLENBQUNiLEdBQUQsSUFBU0EsUUFBUUksZ0JBQUtDLEVBQWIsSUFBbUJMLFFBQVFJLGdCQUFLRSxJQUE3QyxFQUFvRDs7QUFFcEQsUUFBTVEsZ0JBQWdCdkIsMEJBQTBCcUIsTUFBTUcsYUFBaEMsQ0FBdEI7O0FBRUEsUUFBSUQsY0FBY0UsTUFBZCxLQUF5QixDQUE3QixFQUFnQzs7QUFQTSxvQkFTWkMsUUFUWTtBQUFBLFFBUzlCQyxhQVQ4QixhQVM5QkEsYUFUOEI7O0FBVXRDLFFBQUlqQixRQUFRYSxjQUFjSyxTQUFkLENBQXdCO0FBQUEsYUFBS2hCLE1BQU1lLGFBQVg7QUFBQSxLQUF4QixDQUFaO0FBQ0FqQixZQUFRRixrQkFBa0JDLEdBQWxCLEVBQXVCQyxLQUF2QixFQUE4QmEsY0FBY0UsTUFBNUMsQ0FBUjs7QUFFQUYsa0JBQWNiLEtBQWQsRUFBcUJtQixLQUFyQjtBQUNELEc7Ozs7O2tCQWZrQlYsWSIsImZpbGUiOiJldmVudC1oYW5kbGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtFWVMsIENMQVNTX05BTUVfU0VBUkNIX0ZPQ1VTQUJMRSB9IGZyb20gJy4vY29uc3RhbnRzJztcblxuZnVuY3Rpb24gZ2V0Rm9jdXNhYmxlRm91bmRFbGVtZW50cyh0YXJnZXQpIHtcbiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZVxuICAgIC5zbGljZVxuICAgIC5jYWxsKHRhcmdldC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKENMQVNTX05BTUVfU0VBUkNIX0ZPQ1VTQUJMRSkpO1xufVxuXG5mdW5jdGlvbiBjYWxjdWxhdGVOZXdJbmRleChrZXksIGluZGV4LCBsaXN0TGVuZ3RoKSB7XG4gIGxldCBpID0gaW5kZXg7XG4gIHN3aXRjaCAoa2V5KSB7XG4gICAgY2FzZSBLRVlTLlVQOlxuICAgICAgaSAtPSAxO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBLRVlTLkRPV046XG4gICAgICBpICs9IDE7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICB9XG5cbiAgcmV0dXJuICgoaW5kLCBtaW4sIG1heCkgPT4ge1xuICAgIGlmIChpbmQgPCBtaW4pIHJldHVybiBtYXg7XG4gICAgaWYgKGluZCA+IG1heCkgcmV0dXJuIG1pbjtcblxuICAgIHJldHVybiBpbmQ7XG4gIH0pKGksIDAsIGxpc3RMZW5ndGggLSAxKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXZlbnRIYW5kbGVyIHtcbiAgc3RhdGljIHNlYXJjaEVsZW1lbnRGb2N1c0hhbmxkZXIoZXZlbnQpIHtcbiAgICBjb25zdCBrZXkgPSBldmVudC5rZXlDb2RlO1xuXG4gICAgaWYgKCFrZXkgfHwgKGtleSAhPT0gS0VZUy5VUCAmJiBrZXkgIT09IEtFWVMuRE9XTikpIHJldHVybjtcblxuICAgIGNvbnN0IGFsbEZvdW5kSXRlbXMgPSBnZXRGb2N1c2FibGVGb3VuZEVsZW1lbnRzKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuXG4gICAgaWYgKGFsbEZvdW5kSXRlbXMubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICBjb25zdCB7IGFjdGl2ZUVsZW1lbnQgfSA9IGRvY3VtZW50O1xuICAgIGxldCBpbmRleCA9IGFsbEZvdW5kSXRlbXMuZmluZEluZGV4KGkgPT4gaSA9PT0gYWN0aXZlRWxlbWVudCk7XG4gICAgaW5kZXggPSBjYWxjdWxhdGVOZXdJbmRleChrZXksIGluZGV4LCBhbGxGb3VuZEl0ZW1zLmxlbmd0aCk7XG5cbiAgICBhbGxGb3VuZEl0ZW1zW2luZGV4XS5mb2N1cygpO1xuICB9XG59XG4iXX0=